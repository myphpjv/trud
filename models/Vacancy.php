<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\helpers\StringHelper;
use yii\helpers\Url;

/**
 * This is the model class for table "vacancy".
 *
 * @property int $id
 * @property int|null $user_id
 * @property string $company
 * @property string $title
 * @property int|null $salary
 * @property string $description
 * @property int $category_id
 * @property int $region_id
 * @property int|null $created_at
 * @property int|null $updated_at
 */
class Vacancy extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'vacancy';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'salary', 'category_id', 'region_id', 'created_at', 'updated_at'], 'integer'],
            [['company', 'title', 'description', 'category_id', 'region_id'], 'required'],
            [['company', 'title'], 'string', 'max' => 255],
            [['description'], 'string', 'max' => 10000],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'company' => 'Название компании',
            'title' => 'Название вакансии',
            'salary' => 'Зарплата',
            'description' => 'Описание',
            'category_id' => 'Категория',
            'region_id' => 'Регион',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return array|string[]
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::class,
        ];
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        $this->user_id = User::DEFAULT_USER_ID;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @return false|string|null
     */
    public function getCreatedAt()
    {
        return !empty($this->created_at) ? date('d.m.Y') : null;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRegion()
    {
        return $this->hasOne(Region::class, ['id' => 'region_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::class, ['id' => 'category_id']);
    }

    /**
     * @return string|null
     */
    public function getRegionName()
    {
        return !empty($this->region) ? $this->region->name . ' обл.' : null;
    }

    /**
     * @return string|null
     */
    public function getCategoryName()
    {
        return !empty($this->category) ? $this->category->name : null;
    }

    /**
     * @param int $numChars
     * @return string
     */
    public function getShortDescription($numChars = 200)
    {
        return StringHelper::truncate($this->description, $numChars);
    }

    /**
     * @return string
     */
    public function getSalary()
    {
        return $this->salary . ' грн';
    }

    /**
     * @return string
     */
    public function getUrl()
    {
        return Url::to(['/site/view', 'id' => $this->id]);
    }

}
